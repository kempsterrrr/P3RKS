import { useState, useRef, useEffect, useLayoutEffect } from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import { useGetPerk, useIncrementPerkUse } from "../../hooks/usePerks/usePerks";
import { PerksLayout } from "../../components/PerksLayout";
import Link from "next/link";
import useStore from "../../stores/useStore";
import { ProGallery } from "pro-gallery";
import ReactTooltip from "react-tooltip";

const items = [
  {
    // Image item:
    itemId: "sample-id",
    mediaUrl:
      "https://i.picsum.photos/id/674/200/300.jpg?hmac=kS3VQkm7AuZdYJGUABZGmnNj_3KtZ6Twgb5Qb9ITssY",
    metaData: {
      type: "image",
      height: 200,
      width: 100,
      title: "sample-title",
      description: "sample-description",
      focalPoint: [0, 0],
      link: {
        url: "http://example.com",
        target: "_blank",
      },
    },
  },
  {
    // Another Image item:
    itemId: "differentItem",
    mediaUrl:
      "https://i.picsum.photos/id/1003/1181/1772.jpg?hmac=oN9fHMXiqe9Zq2RM6XT-RVZkojgPnECWwyEF1RvvTZk",
    metaData: {
      type: "image",
      height: 200,
      width: 100,
      title: "sample-title",
      description: "sample-description",
      focalPoint: [0, 0],
      link: {
        url: "http://example.com",
        target: "_blank",
      },
    },
  },
  {
    // HTML item:
    itemId: "htmlItem",
    html: "<div style='width: 300px; height: 200px; background:pink;'>I am a text block</div>",
    metadata: {
      type: "text",
      height: 200,
      width: 300,
      title: "sample-title",
      description: "sample-description",
      backgroundColor: "pink",
    },
  },
  {
    // Another Image item:
    itemId: "differentItem",
    mediaUrl:
      "https://i.picsum.photos/id/1003/1181/1772.jpg?hmac=oN9fHMXiqe9Zq2RM6XT-RVZkojgPnECWwyEF1RvvTZk",
    metaData: {
      type: "image",
      height: 200,
      width: 100,
      title: "sample-title",
      description: "sample-description",
      focalPoint: [0, 0],
      link: {
        url: "http://example.com",
        target: "_blank",
      },
    },
  },
  {
    // HTML item:
    itemId: "htmlItem",
    html: "<div style='width: 300px; height: 200px; background:pink;'>I am a text block</div>",
    metadata: {
      type: "text",
      height: 200,
      width: 300,
      title: "sample-title",
      description: "sample-description",
      backgroundColor: "pink",
    },
  },
];

const RedeemPage = () => {
  const [width, setWidth] = useState(400);
  const test = useRef(null);
  const galleryDivWidth = test.current?.clientWidth;
  const { query, push } = useRouter();
  const { data: perk, isLoading } = useGetPerk(query.id);
  const incrementPerkUse = useIncrementPerkUse();
  const theme = useStore((state) => state.user.theme);

  const handleRedeemPerk = async (perkId, uses, website) => {
    const response = await incrementPerkUse.mutateAsync({
      perkId,
      uses: uses + 1,
    });

    push(website);
  };

  useEffect(() => {
    if (galleryDivWidth) setWidth(test.current.clientWidth);
  }, [galleryDivWidth]);

  if (isLoading) return <div>loading...</div>;

  return (
    <>
      <Head>
        <title>P3RKS</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PerksLayout>
        <Link href="/perks">
          <a className="h-[48px] w-fit flex items-center cursor-pointer gap-[5px] hover:text-[#1A021B] dark:hover:text-[#ECECEC]">
            <svg
              className="h-[20px] w-[20px]"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
              strokeWidth="1.5"
              aria-hidden="true"
            >
              <path d="M0 0h24v24H0z" stroke="none" />
              <path d="M5 12h14M5 12l4 4M5 12l4-4" />
            </svg>
            Back
          </a>
        </Link>

        <div className="flex mt-[109px] space-x-[60px]">
          <div className="flex-1 space-y-[60px]">
            <div>
              <div className="text-[48px] text-[#171717] dark:text-[#ECECEC]">
                {perk?.fields["Partner Name"]}
              </div>
              <div className="text-[24px]">{perk?.fields["Perk"]}</div>
            </div>
            <div className="space-y-[20px]">
              <div className="space-y-[4px]">
                <div className="text-[20px] text-[#171717] dark:text-[#ECECEC]">
                  About {perk?.fields["Partner Name"]}
                </div>
                <div className="text-[18px]">
                  {perk?.fields["Partner About"]}
                </div>
              </div>
              <div className="text-[20px] text-[#171717] dark:text-[#ECECEC]">
                Gallery
              </div>
              <div
                ref={test}
                className="rounded-[16px] overflow-hidden border-[1px] border-[#F3F1F3] dark:border-[#2E2E2E]"
              >
                <ProGallery
                  items={items}
                  options={{
                    galleryLayout: 3,
                    showArrows: false,
                    isAutoSlideshow: true,
                    thumbnailSpacings: 0,
                    slideshowLoop: true,
                    infiniteScroll: true,
                  }}
                  container={{
                    width,
                    height: 400,
                  }}
                />
              </div>
            </div>
          </div>
          <div className="!mr-[150px] py-[50px] flex-1 flex flex-col justify-between space-y-[60px]">
            <div className="flex justify-end gap-[16px]">
              <a
                data-tip
                data-for="website"
                className="w-[48px] h-[48px] border-[#ECEBEC] text-[#9E9E9E] border-[1px] rounded-full flex justify-center items-center cursor-pointer hover:border-[#1A021B] hover:text-[#1A021B] dark:border-[#2E2E2E] dark:bg-[#232323] dark:text-[#8A8A8A] dark:hover:text-white dark:hover:border-white"
                onClick={() => push(perk?.fields["Website"])}
              >
                <svg
                  className="h-[20px] w-[20px]"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  strokeWidth="1.5"
                  aria-hidden="true"
                >
                  <path d="M0 0h24v24H0z" stroke="none" />
                  <rect x="3" y="4" width="18" height="12" rx="1" />
                  <path d="M7 20h10M9 16v4M15 16v4" />
                </svg>
              </a>
              <a
                data-tip
                data-for="twitter"
                className="w-[48px] h-[48px] border-[#ECEBEC] text-[#9E9E9E] border-[1px] rounded-full flex justify-center items-center cursor-pointer hover:border-[#1A021B] hover:text-[#1A021B] dark:border-[#2E2E2E] dark:bg-[#232323] dark:text-[#8A8A8A] dark:hover:text-white dark:hover:border-white"
                onClick={() => push(perk?.fields["Twitter"])}
              >
                <svg
                  className="h-[20px] w-[20px]"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  strokeWidth="1.5"
                  aria-hidden="true"
                >
                  <path d="M0 0h24v24H0z" stroke="none" />
                  <path d="M22 4.01c-1 .49-1.98.689-3 .99-1.121-1.265-2.783-1.335-4.38-.737S11.977 6.323 12 8v1c-3.245.083-6.135-1.395-8-4 0 0-4.182 7.433 4 11-1.872 1.247-3.739 2.088-6 2 3.308 1.803 6.913 2.423 10.034 1.517 3.58-1.04 6.522-3.723 7.651-7.742a13.84 13.84 0 0 0 .497-3.753C20.18 7.773 21.692 5.25 22 4.009z" />
                </svg>
              </a>
            </div>
            <div>
              <div className="pb-[40px] text-[26px] text-[#171717] dark:text-[#ECECEC]">
                Perk details
              </div>
              <div className="space-y-[4px]">
                <div className="text-[20px] text-[#171717] dark:text-[#ECECEC]">
                  Description
                </div>
                <div className="text-[18px]">
                  {perk?.fields["Perk Description"]}
                </div>
              </div>
              <div className="my-[20px] space-y-[4px]">
                <div className="text-[20px] text-[#171717] dark:text-[#ECECEC]">
                  Redemption instructions
                </div>
                <div className="text-[18px]">
                  {perk?.fields["Redemption Instructions"]}
                </div>
              </div>
              <a
                className="flex justify-center items-center text-white text-[15px] font-medium rounded-full bg-[#1A021B] py-[18px] px-[48px] cursor-pointer sm:text-[16px] lg:text-[18px] lg:px-[52px] hover:shadow-[0_0_35px_rgba(0,0,0,0.25)] dark:border-[#414141] dark:bg-[#EAEAEA] dark:text-[#171717] dark:hover:bg-white"
                onClick={() =>
                  handleRedeemPerk(
                    perk?.id,
                    perk?.fields["Uses"],
                    perk?.fields["Redemption Link"]
                  )
                }
              >
                Redeem perk
              </a>
            </div>
          </div>
        </div>
      </PerksLayout>
      {/*@ts-ignore - React tooltip is working on a fix */}
      <ReactTooltip
        id="website"
        place="top"
        effect="solid"
        backgroundColor={
          theme == "dark" || theme == "system" ? "#2B2B2B" : "#1A021B"
        }
        className="!rounded-full"
      >
        <div className="text-white dark:text-[#FFF]/[0.50]">View website</div>
      </ReactTooltip>

      {/*@ts-ignore - React tooltip is working on a fix */}
      <ReactTooltip
        id="twitter"
        place="top"
        effect="solid"
        backgroundColor={
          theme == "dark" || theme == "system" ? "#2B2B2B" : "#1A021B"
        }
        className="!rounded-full"
      >
        <div className="text-white dark:text-[#FFF]/[0.50]">View twitter</div>
      </ReactTooltip>
    </>
  );
};

export default RedeemPage;
